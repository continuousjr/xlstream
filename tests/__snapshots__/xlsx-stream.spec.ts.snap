// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`adds empty rows not containing data when ignoreEmpty is false 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        "hello",
        "world",
      ],
      "obj": Object {
        "A": "hello",
        "B": "world",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "hello",
        "world",
      ],
      "obj": Object {
        "A": "hello",
        "B": "world",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "hello",
        "world",
      ],
      "obj": Object {
        "A": "hello",
        "B": "world",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "hello",
        "world",
      ],
      "obj": Object {
        "A": "hello",
        "B": "world",
      },
    },
  },
]
`;

exports[`applies custom number format 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        5931.2,
      ],
      "obj": Object {
        "A": 5931.2,
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        0.333,
      ],
      "obj": Object {
        "A": 0.333,
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "59:31.2",
      ],
      "obj": Object {
        "A": "59:31.2",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        0.333,
      ],
      "obj": Object {
        "A": 0.333,
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "59 31",
      ],
      "obj": Object {
        "A": "59 31",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        0.333,
      ],
      "obj": Object {
        "A": 0.333,
      },
    },
  },
]
`;

exports[`correctly handles shared string if it has just one value in cell 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        "Email test",
      ],
      "obj": Object {
        "A": "Email test",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "Email test",
      ],
      "obj": Object {
        "A": "Email test",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        "test@test.com",
      ],
      "obj": Object {
        "B": "test@test.com",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        "test@test.com",
      ],
      "obj": Object {
        "B": "test@test.com",
      },
    },
  },
]
`;

exports[`correctly reads file created with OpenXML (with \`x\` namespaces) 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        "a",
        "b",
      ],
      "obj": Object {
        "A": "a",
        "B": "b",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "a",
        "b",
      ],
      "obj": Object {
        "A": "a",
        "B": "b",
      },
    },
  },
]
`;

exports[`does not ignore empty rows with data when ignoreEmpty is false 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        "hello",
        "world",
      ],
      "obj": Object {
        "A": "hello",
        "B": "world",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "hello",
        "world",
      ],
      "obj": Object {
        "A": "hello",
        "B": "world",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "hello",
        "world",
      ],
      "obj": Object {
        "A": "hello",
        "B": "world",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "hello",
        "world",
      ],
      "obj": Object {
        "A": "hello",
        "B": "world",
      },
    },
  },
]
`;

exports[`doesn't fail when empty row has custom height 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        "test",
      ],
      "obj": Object {
        "A": "test",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "test",
      ],
      "obj": Object {
        "A": "test",
      },
    },
  },
]
`;

exports[`fills merged cells with data 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        "text1",
        "text1",
        "text1",
      ],
      "obj": Object {
        "C": "text1",
        "D": "text1",
        "E": "text1",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        "text1",
        "text1",
        "text1",
      ],
      "obj": Object {
        "C": "text1",
        "D": "text1",
        "E": "text1",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        "$5.67",
      ],
      "obj": Object {
        "C": "$5.67",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        5.66666,
      ],
      "obj": Object {
        "C": 5.66666,
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        "$5.67",
      ],
      "obj": Object {
        "C": "$5.67",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        5.66666,
      ],
      "obj": Object {
        "C": 5.66666,
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        "$5.67",
      ],
      "obj": Object {
        "C": "$5.67",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        5.66666,
      ],
      "obj": Object {
        "C": 5.66666,
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        "text3",
        "text3",
        "text3",
      ],
      "obj": Object {
        "D": "text3",
        "E": "text3",
        "F": "text3",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        "text3",
        "text3",
        "text3",
      ],
      "obj": Object {
        "D": "text3",
        "E": "text3",
        "F": "text3",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        "text3",
        "text3",
        "text3",
      ],
      "obj": Object {
        "D": "text3",
        "E": "text3",
        "F": "text3",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        "text3",
        "text3",
        "text3",
      ],
      "obj": Object {
        "D": "text3",
        "E": "text3",
        "F": "text3",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "text4",
        "text4",
      ],
      "obj": Object {
        "H": "text4",
        "I": "text4",
      },
    },
  },
]
`;

exports[`fills merged cells with data if header has merged cells 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        1,
        2,
        3,
        4,
      ],
      "obj": Object {
        "[A] merged header #1": 1,
        "[B] merged header #1": 2,
        "[C] merged header #2": 3,
        "[D] merged header #2": 4,
      },
    },
    "header": Array [
      "[A] merged header #1",
      "[B] merged header #1",
      "[C] merged header #2",
      "[D] merged header #2",
    ],
    "raw": Object {
      "arr": Array [
        1,
        2,
        3,
        4,
      ],
      "obj": Object {
        "[A] merged header #1": 1,
        "[B] merged header #1": 2,
        "[C] merged header #2": 3,
        "[D] merged header #2": 4,
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        5,
        6,
        7,
        8,
      ],
      "obj": Object {
        "[A] merged header #1": 5,
        "[B] merged header #1": 6,
        "[C] merged header #2": 7,
        "[D] merged header #2": 8,
      },
    },
    "header": Array [
      "[A] merged header #1",
      "[B] merged header #1",
      "[C] merged header #2",
      "[D] merged header #2",
    ],
    "raw": Object {
      "arr": Array [
        5,
        6,
        7,
        8,
      ],
      "obj": Object {
        "[A] merged header #1": 5,
        "[B] merged header #1": 6,
        "[C] merged header #2": 7,
        "[D] merged header #2": 8,
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        "merged",
        "merged",
      ],
      "obj": Object {
        "[C] merged header #2": "merged",
        "[D] merged header #2": "merged",
      },
    },
    "header": Array [
      "[A] merged header #1",
      "[B] merged header #1",
      "[C] merged header #2",
      "[D] merged header #2",
    ],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        "merged",
        "merged",
      ],
      "obj": Object {
        "[C] merged header #2": "merged",
        "[D] merged header #2": "merged",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        undefined,
        undefined,
        "merged",
        "merged",
      ],
      "obj": Object {
        "[C] merged header #2": "merged",
        "[D] merged header #2": "merged",
      },
    },
    "header": Array [
      "[A] merged header #1",
      "[B] merged header #1",
      "[C] merged header #2",
      "[D] merged header #2",
    ],
    "raw": Object {
      "arr": Array [
        undefined,
        undefined,
        "merged",
        "merged",
      ],
      "obj": Object {
        "[C] merged header #2": "merged",
        "[D] merged header #2": "merged",
      },
    },
  },
]
`;

exports[`gets worksheet by index, even if they are reordered 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        "Sheet5",
      ],
      "obj": Object {
        "A": "Sheet5",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "Sheet5",
      ],
      "obj": Object {
        "A": "Sheet5",
      },
    },
  },
]
`;

exports[`gets worksheet by name, even if they are reordered 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        "Sheet1",
      ],
      "obj": Object {
        "A": "Sheet1",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "Sheet1",
      ],
      "obj": Object {
        "A": "Sheet1",
      },
    },
  },
]
`;

exports[`ignores empty rows 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        "hello",
        "world",
      ],
      "obj": Object {
        "A": "hello",
        "B": "world",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "hello",
        "world",
      ],
      "obj": Object {
        "A": "hello",
        "B": "world",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "hello",
        "world",
      ],
      "obj": Object {
        "A": "hello",
        "B": "world",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "hello",
        "world",
      ],
      "obj": Object {
        "A": "hello",
        "B": "world",
      },
    },
  },
]
`;

exports[`reads 2 sheets from XLSX file using generator 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        "Sheet3",
      ],
      "obj": Object {
        "A": "Sheet3",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "Sheet3",
      ],
      "obj": Object {
        "A": "Sheet3",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "Sheet1",
      ],
      "obj": Object {
        "A": "Sheet1",
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "Sheet1",
      ],
      "obj": Object {
        "A": "Sheet1",
      },
    },
  },
]
`;

exports[`reads XLSX file correctly 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        "hello",
        123,
      ],
      "obj": Object {
        "A": "hello",
        "B": 123,
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "hello",
        123.123,
      ],
      "obj": Object {
        "A": "hello",
        "B": 123.123,
      },
    },
  },
]
`;

exports[`reads XLSX file with header 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        "hello",
        undefined,
        123,
      ],
      "obj": Object {
        "column1": "hello",
        "column3": 123,
      },
    },
    "header": Array [
      "column1",
      "column2",
      "column3",
    ],
    "raw": Object {
      "arr": Array [
        "hello",
        undefined,
        123.123,
      ],
      "obj": Object {
        "column1": "hello",
        "column3": 123.123,
      },
    },
  },
]
`;

exports[`reads XLSX file with header located in specific row 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [
      "header1",
      "header2",
    ],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "void1",
        "void2",
      ],
      "obj": Object {
        "A": "void1",
        "B": "void2",
      },
    },
    "header": Array [
      "header1",
      "header2",
    ],
    "raw": Object {
      "arr": Array [
        "void1",
        "void2",
      ],
      "obj": Object {
        "A": "void1",
        "B": "void2",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "void3",
        "void4",
      ],
      "obj": Object {
        "A": "void3",
        "B": "void4",
      },
    },
    "header": Array [
      "header1",
      "header2",
    ],
    "raw": Object {
      "arr": Array [
        "void3",
        "void4",
      ],
      "obj": Object {
        "A": "void3",
        "B": "void4",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [
      "header1",
      "header2",
    ],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [],
      "obj": Object {},
    },
    "header": Array [
      "header1",
      "header2",
    ],
    "raw": Object {
      "arr": Array [],
      "obj": Object {},
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "a",
        "b",
      ],
      "obj": Object {
        "header1": "a",
        "header2": "b",
      },
    },
    "header": Array [
      "header1",
      "header2",
    ],
    "raw": Object {
      "arr": Array [
        "a",
        "b",
      ],
      "obj": Object {
        "header1": "a",
        "header2": "b",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "c",
        "d",
      ],
      "obj": Object {
        "header1": "c",
        "header2": "d",
      },
    },
    "header": Array [
      "header1",
      "header2",
    ],
    "raw": Object {
      "arr": Array [
        "c",
        "d",
      ],
      "obj": Object {
        "header1": "c",
        "header2": "d",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "e",
        "f",
      ],
      "obj": Object {
        "header1": "e",
        "header2": "f",
      },
    },
    "header": Array [
      "header1",
      "header2",
    ],
    "raw": Object {
      "arr": Array [
        "e",
        "f",
      ],
      "obj": Object {
        "header1": "e",
        "header2": "f",
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "g",
        "h",
      ],
      "obj": Object {
        "header1": "g",
        "header2": "h",
      },
    },
    "header": Array [
      "header1",
      "header2",
    ],
    "raw": Object {
      "arr": Array [
        "g",
        "h",
      ],
      "obj": Object {
        "header1": "g",
        "header2": "h",
      },
    },
  },
]
`;

exports[`reads XLSX file with header values being dupicated 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        1,
        2,
        3,
        4,
      ],
      "obj": Object {
        "[B] header2": 2,
        "[C] header2": 3,
        "header1": 1,
        "header3": 4,
      },
    },
    "header": Array [
      "header1",
      "[B] header2",
      "[C] header2",
      "header3",
    ],
    "raw": Object {
      "arr": Array [
        1,
        2,
        3,
        4,
      ],
      "obj": Object {
        "[B] header2": 2,
        "[C] header2": 3,
        "header1": 1,
        "header3": 4,
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        5,
        6,
        7,
        8,
      ],
      "obj": Object {
        "[B] header2": 6,
        "[C] header2": 7,
        "header1": 5,
        "header3": 8,
      },
    },
    "header": Array [
      "header1",
      "[B] header2",
      "[C] header2",
      "header3",
    ],
    "raw": Object {
      "arr": Array [
        5,
        6,
        7,
        8,
      ],
      "obj": Object {
        "[B] header2": 6,
        "[C] header2": 7,
        "header1": 5,
        "header3": 8,
      },
    },
  },
]
`;

exports[`reads XLSX file with header values being undefined 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        1,
        2,
        3,
        4,
      ],
      "obj": Object {
        "[B]": 2,
        "[C]": 3,
        "columnA": 1,
        "columnD": 4,
      },
    },
    "header": Array [
      "columnA",
      "[B]",
      "[C]",
      "columnD",
    ],
    "raw": Object {
      "arr": Array [
        1,
        2,
        3,
        4,
      ],
      "obj": Object {
        "[B]": 2,
        "[C]": 3,
        "columnA": 1,
        "columnD": 4,
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        1,
        undefined,
        3,
        4,
        5,
      ],
      "obj": Object {
        "[C]": 3,
        "[E]": 5,
        "columnA": 1,
        "columnD": 4,
      },
    },
    "header": Array [
      "columnA",
      "[B]",
      "[C]",
      "columnD",
      "[E]",
    ],
    "raw": Object {
      "arr": Array [
        1,
        undefined,
        3,
        4,
        5,
      ],
      "obj": Object {
        "[C]": 3,
        "[E]": 5,
        "columnA": 1,
        "columnD": 4,
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        1,
        2,
        3,
        4,
        5,
        6,
      ],
      "obj": Object {
        "[B]": 2,
        "[C]": 3,
        "[E]": 5,
        "[F]": 6,
        "columnA": 1,
        "columnD": 4,
      },
    },
    "header": Array [
      "columnA",
      "[B]",
      "[C]",
      "columnD",
      "[E]",
      "[F]",
    ],
    "raw": Object {
      "arr": Array [
        1,
        2,
        3,
        4,
        5,
        6,
      ],
      "obj": Object {
        "[B]": 2,
        "[C]": 3,
        "[E]": 5,
        "[F]": 6,
        "columnA": 1,
        "columnD": 4,
      },
    },
  },
]
`;

exports[`reads empty XLSX file correctly 1`] = `Array []`;

exports[`reads number values with leading zeroes correctly 1`] = `
Array [
  Object {
    "formatted": Object {
      "arr": Array [
        "0000",
        0,
      ],
      "obj": Object {
        "A": "0000",
        "B": 0,
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "0000",
        0,
      ],
      "obj": Object {
        "A": "0000",
        "B": 0,
      },
    },
  },
  Object {
    "formatted": Object {
      "arr": Array [
        "0001",
        1,
      ],
      "obj": Object {
        "A": "0001",
        "B": 1,
      },
    },
    "header": Array [],
    "raw": Object {
      "arr": Array [
        "0001",
        1,
      ],
      "obj": Object {
        "A": "0001",
        "B": 1,
      },
    },
  },
]
`;

exports[`throws expected bad archive error 1`] = `[Error: Archive read error]`;
